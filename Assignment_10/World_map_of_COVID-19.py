# -*- coding: utf-8 -*-
"""Untitled12.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1k4wCQp3uTmkPTMs3fbPkZxSs0jCCceK6
"""

!pip install cartopy

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import matplotlib.pyplot as plt
# %matplotlib inline
import pandas as pd
import geopandas as gpd
from cartopy import crs

world = gpd.read_file(gpd.datasets.get_path('naturalearth_lowres'))
type(world)

ae = crs.AzimuthalEquidistant()
aeproj4 = ae.proj4_init # Convert to`proj4` string/dict usable in gpd
world_ae = world.to_crs(aeproj4)
aea = crs.AlbersEqualArea()
aea
aea_geo = [aea.project_geometry(ii, src_crs=ae)
for ii in world_ae['geometry'].values]

gpd.GeoDataFrame(world, geometry=aea_geo, crs=aea.proj4_init).plot();

c = pd.read_csv('/content/time_series_covid19_confirmed_global.csv')
c = c.rename(columns={'Country/Region': 'country'}).iloc[:, 1:]
len(c['country']) - len(set(c['country']))
cg = c.groupby('country')[c.columns[3:]].sum()
cg['Lat'] = c.groupby('country')['Lat'].mean()
cg['Long'] = c.groupby('country')['Long'].mean()
geo = gpd.points_from_xy(cg['Long'], cg['Lat'])
c_aea_geo = [aea.project_geometry(ii) for ii in geo]
cg = gpd.GeoDataFrame(cg, geometry=c_aea_geo, crs=aea.proj4_init)

def covidworldmap(date):
  fig, ax = plt.subplots(figsize=(12, 10))
  # put the world map on an axis
  w = gpd.GeoDataFrame(world, geometry=aea_geo, crs=aea.proj4_init)
  w.plot(ax=ax, color='midnightblue', edgecolor='darkslategray')
  ax.set_facecolor('dimgray')
  mx = cg.iloc[:, :-3].max().max() # get max across data
  # set marker sizes, with a min marker size for cases > 1000
  msz = 500 * np.where(cg[date]-1000, np.maximum(cg[date]/mx, 0.001), 0)
  cg.plot(ax=ax, cmap='Wistia', markersize=msz, alpha=0.5)
  ax.set_xticks([]) # remove axis marks
  ax.set_yticks([]);

!pip install celluloid

import numpy as np
import matplotlib.pyplot as plt
from celluloid import Camera

# Create the initial plot
fig, ax = plt.subplots(figsize=(12, 10))
w = gpd.GeoDataFrame(world, geometry=aea_geo, crs=aea.proj4_init)
w.plot(ax=ax, color='midnightblue', edgecolor='darkslategray')
ax.set_facecolor('dimgray')
mx = cg.iloc[:, :-3].max().max() # get max across data
# covidworldmap('5/5/20')

camera = Camera(fig)

# Generate animation frames
for date in cg.columns[:-3]:
    msz = 500 * np.where(cg[date]-1000, np.maximum(cg[date]/mx, 0.001), 0)
    w = gpd.GeoDataFrame(world, geometry=aea_geo, crs=aea.proj4_init)
    w.plot(ax=ax, color='midnightblue', edgecolor='darkslategray')
    ax.set_facecolor('dimgray')
    cg.plot(ax=ax, cmap='Wistia', markersize=msz, alpha=0.5)
    camera.snap()

# Create the animation
animation = camera.animate()

# Show the animation
animation.save('animation_covid_confirmed.mp4')